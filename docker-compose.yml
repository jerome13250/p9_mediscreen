# DockerFile MySQL sources:
# https://openclassrooms.com/fr/courses/2035766-optimisez-votre-deploiement-en-creant-des-conteneurs-avec-docker/6211677-creez-un-fichier-docker-compose-pour-orchestrer-vos-conteneurs
# https://dev.mysql.com/doc/refman/8.0/en/docker-mysql-more-topics.html
# https://stackoverflow.com/questions/43322033/create-database-on-docker-compose-startup

version: '3'
services:
  mysql_docker:
    image: mysql:8
    volumes:
      - db_data_mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      ## MYSQL_DATABASE: Specify the name of a database to be created on image startup with a CREATE DATABASE IF NOT EXIST statement.
      ## If MYSQL_USER and MYSQL_PASSWORD are supplied, the user is created and granted superuser access to this database
      MYSQL_DATABASE: mediscreen
      MYSQL_USER: mpatient
      MYSQL_PASSWORD: mpatient
    ports:
      - "3307:3306"
    
  mpatient:
    build:
      context: .
      target: mpatient
    depends_on:
      - mysql_docker
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_docker/mediscreen?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: mpatient
      SPRING_DATASOURCE_PASSWORD: mpatient
    ports:
      - "8081:8081"

  mongodb_docker:
    image: mongo:latest
    volumes:
      - db_data_mongo:/data/db
      - mongo_config:/data/configdb
    ports:
      - "27018:27017"

  mnote:
    build:
      context: .
      target: mnote
    depends_on:
      - mongodb_docker
    restart: always
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb_docker
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: mediscreen
    ports:
      - "8082:8082"
      
      
  mdiabeteassess:
    build:
      context: .
      target: mdiabeteassess
    depends_on:
      - mpatient
      - mnote
    restart: always
    environment:
      FEIGN_MPATIENT_URL: http://mpatient:8081
      FEIGN_MNOTE_URL: http://mnote:8082
    ports:
      - "8083:8083"
      
  clientui:
    build:
      context: .
      target: clientui
    depends_on:
      - mpatient
      - mnote
      - mdiabeteassess
    restart: always
    environment:
      FEIGN_MPATIENT_URL: http://mpatient:8081
      FEIGN_MNOTE_URL: http://mnote:8082
      FEIGN_MDIABETEASSESS_URL: http://mdiabeteassess:8083
    ports:
      - "8080:8080"

volumes:
  db_data_mysql: {}
  db_data_mongo: {}
  mongo_config: {}